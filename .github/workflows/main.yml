name: build and deploy
on:
  workflow_dispatch:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          path: "workflow-demo"

      - run: cd workflow-demo && rm -rf node_modules && npm i    

      - run: |
          pwd
          git clone https://github.com/prashansatw/demo-workflow-test.git  ../pg-website

      - run: |
          git clone https://github.com/DPGAlliance/publicgoods-scripts.git ../pg-scripts 
          

      - run: |
          
          pwd
          ls
          rm -rf ../pg-website/*
          cd ../pg-website
          ls

      - run: |
          ls
          workflow-demo/src/scripts/static.bash
          pwd
          cd ../pg-website
          ls
          
      
      - run: |
          cd ../pg-scripts 
          pwd
          rm -rf node modules
          npm install 
          cd packages/automation 
          node consolidate_data.js  
          
      - run: |  
          pwd 
          node workflow-demo/src/index.js

      - run: |
          ln -s ../pg-website/wp-includes/ ../pg-scripts/packages/eligibility/public/wp-includes;
          ln -s ../pg-website/wp-content/ ../pg-scripts/packages/eligibility/public/wp-content;
          ln -s ../pg-website/wp-includes/ ../pg-scripts/packages/registry/public/wp-includes;
          ln -s ../pg-website/wp-content/ ../pg-scripts/packages/registry/public/wp-content;
          ln -s ../pg-website/wp-includes/ ../pg-scripts/packages/roadmap/public/wp-includes;
          ln -s ../pg-website/wp-content/ ../pg-scripts/packages/roadmap/public/wp-content;

      - run: |
          cd ../pg-scripts/packages/registry
          npm i && npm run build
      
      - run: |
          cd ../pg-scripts/packages/eligibility
          npm i && npm run build
      
      - run: |
          cd ../pg-scripts/packages/roadmap
          npm i && npm run build

      - run: workflow-demo/src/scripts/moveFiles.bash

          # cd packages/registry 
          # npm run build
          # cd .. 
          # cd eligibility 
          # npm run build 
          # cd .. 
          # cd roadmap 
          # npm run build 
          # cd ..
          # cd ..
          # cd .. 
          # ./src/scripts/moveFiles.bash 
          # cd .. 

      - name: Set GitHub Actions as Commit Author
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com

      # - name: Build
      #   run: |
      #     cd build
      #     npm i
      #     npm run build
      #     cd ..

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with: 
          name: artifacts
          path: "/home/runner/work/demo-workflow/pg-website/*"


  # push_to_artifactory:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
      
  #     - name: Download Artifacts
  #       uses: actions/download-artifact@v3
  #       with: 
  #         name: artifacts
  #         path: artifacts${{ github.run_number}}/
      
  #     - name: Setup JFrog CLI
  #       id: setup_JFrog_CLI
  #       uses: jfrog/setup-jfrog-cli@v3
  #       env:
  #         JF_URL: ${{ secrets.JF_URL }}
  #         JF_USER: ${{secrets.JF_USER}}
  #         JF_PASSWORD: ${{secrets.JF_PASSWORD}}

  #     - run: |
  #         echo  ${{steps.setup_JFrog_CLI.env.JF_URL}}
  #         jf rt ping --url=https://dpga.jfrog.io/artifactory

  #     - run: jf rt  u "artifacts${{ github.run_number}}/*" demo-app-artifacts

  deploy_to_test:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: test
      url: https://prashansatw.github.io/demo-workflow-test/

    steps:
      
      - name: Set GitHub Actions as Commit Author
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with: 
          name: artifacts
          path: artifacts/

      - name: Checkout Dev Target
        uses: actions/checkout@v2
        with:
          repository: prashansatw/demo-workflow-test
          path: "deploy"
          token: ${{secrets.PAT}}

      - name: Push files to target
        run: |
          rm -rf deploy/*
          cp -r artifacts/* deploy
          cd deploy
          # cp build/index.html .
          # cp -r build/static .
          touch .nojekyll
          echo ${{ env.URL }} > CNAME
          git remote set-url origin https://github.com/prashansatw/demo-workflow-test.git
          git add .
          git commit -m $GITHUB_SHA
          git push --set-upstream origin main

  deploy_to_prod:
    needs: deploy_to_test
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://prashansatw.github.io/demo-workflow-prod/
    steps:

      - name: Set GitHub Actions as Commit Author
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with: 
          name: artifacts
          path: artifacts/
      
      - name: Checkout Dev Target
        uses: actions/checkout@v2
        with:
          repository: prashansatw/demo-workflow-prod
          path: "deploy"
          token: ${{secrets.PAT}}
      
      - name: Push to prod
        run: |
          rm -rf deploy/*
          cp -r artifacts/* deploy/
          cd deploy
          touch .nojekyll
          echo ${{ env.URL }} > CNAME
          git remote set-url origin https://github.com/prashansatw/demo-workflow-prod.git
          git add .
          git commit -m $GITHUB_SHA
          git push --set-upstream origin main

    
